import streamlit as st
import PyPDF2
import re
from collections import Counter

def extract_text_from_pdf(pdf_file):
    pdf_reader = PyPDF2.PdfReader(pdf_file)
    text = ""
    for page in pdf_reader.pages:
        text += page.extract_text()
    return text

def count_keywords(text, keywords):
    count = 0
    for keyword in keywords:
        count += text.lower().count(keyword.lower())
    return count

def analyze_resume(resume_text):
    # Define keywords for different sections
    project_keywords = ["project", "work", "experience"]
    skill_keywords = ["skill", "technology", "programming", "language"]
    achievement_keywords = ["achievement", "award", "honour"]
    spell_errors = len(re.findall(r'\b\w{16,}\b', resume_text))  # Count words with more than 15 characters
    
    # Count occurrences of keywords in resume
    project_count = count_keywords(resume_text, project_keywords)
    skill_count = count_keywords(resume_text, skill_keywords)
    achievement_count = count_keywords(resume_text, achievement_keywords)
    
    # Calculate overall score
    total_score = project_count + skill_count + achievement_count - spell_errors
    
    return {
        "Project Count": project_count,
        "Skill Count": skill_count,
        "Achievement Count": achievement_count,
        "Spell Errors": spell_errors,
        "Total Score": total_score
    }

def main():
    st.set_page_config("Resume Analyzer", page_icon='ðŸ“ƒ', layout='centered')
    st.title("Resume Analyzer")
    
    uploaded_file = st.file_uploader("Upload your resume (PDF format)", type="pdf")
    
    if uploaded_file is not None:
        st.success("Resume uploaded successfully!")
        raw_text = extract_text_from_pdf(uploaded_file)
        
        st.subheader("Resume Analysis")
        analysis_result = analyze_resume(raw_text)
        for key, value in analysis_result.items():
            st.write(f"- {key}: {value}")

if __name__ == "__main__":
    main()
